//=========================================================
//
// UI処理 [ui.cpp]
// Author = 阿部翔大郎
//
//=========================================================
#include "ui.h"
#include "manager.h"
#include "renderer.h"
#include "texture.h"

//===============================================
// マクロ定義
//===============================================
#define TEXTURE	"data\\TEXTURE\\ui001.png"	// UIのテクスチャ
#define SIZE_X		(200.0f)				// 横サイズ
#define SIZE_Y		(50.0f)					// 縦サイズ

//===============================================
// 静的メンバ変数
//===============================================
int CUi::m_IdxTexture = 0;				// 使用するテクスチャの番号

//===============================================
// コンストラクタ
//===============================================
CUi::CUi() : CObject2D(0)
{
	// 値のクリア
	m_bMove = true;
	m_fTexU = 0.0f;
	m_fTexV = 0.0f;
}

//===============================================
// コンストラクタ（オーバーロード）
//===============================================
CUi::CUi(int nPriority) : CObject2D(nPriority)
{
	// 値のクリア
	m_bMove = true;
	m_fTexU = 0.0f;
	m_fTexV = 0.0f;
}

//===============================================
// デストラクタ
//===============================================
CUi::~CUi()
{
	
}

//===============================================
// 生成処理
//===============================================
CUi *CUi::Create(int nIdx, int nPriority)
{
	CUi *pUi;

	// 背景の生成
	pUi = new CUi(nPriority);

	// 種類の設定
	pUi->SetType(TYPE_BG);

	// サイズの設定
	pUi->SetSize(SIZE_X, SIZE_Y);

	// 初期化処理
	pUi->Init(D3DXVECTOR3(1050.0f, 600.0f, 0.0f));

	// テクスチャの割り当て
	pUi->BindTexture(m_IdxTexture);

	return pUi;
}

//===============================================
// 初期化処理
//===============================================
HRESULT CUi::Init(D3DXVECTOR3 pos)
{
	// オブジェクト2Dの初期化処理
	CObject2D::Init(pos);

	// テクスチャの設定
	m_IdxTexture = CManager::GetTexture()->Regist(TEXTURE);

	return S_OK;
}

//===============================================
// 終了処理
//===============================================
void CUi::Uninit(void)
{
	CObject2D::Uninit();
}

//===============================================
// 更新処理
//===============================================
void CUi::Update(void)
{
	
}

//===============================================
// 描画処理
//===============================================
void CUi::Draw(void)
{
	// オブジェクト2Dの描画処理
	CObject2D::Draw();
}